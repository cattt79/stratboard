---
import Layout from '@/layouts/Layout.astro'
import StratBoard from '@/components/StratBoard.astro'
---

<Layout title="M7S">
  <div class="flex h-screen w-screen items-center justify-center">
    <StratBoard key="stratboard" canvasClass="scale-200" />
  </div>
</Layout>

<script>
  import { listenKeys } from 'nanostores'
  import { Assets, Container, Graphics, Sprite } from 'pixi.js'

  import type { RoleType } from '@/lib/role'

  import { AoE } from '@/pixi/aoe'
  import { Role } from '@/pixi/role'
  import { getScale, YmToPx } from '@/pixi/scale'
  import { setWaymark } from '@/pixi/waymark'
  import { $stratBoards } from '@/stores/stratBoards'

  import { waymarkDataDB } from '../_waymark'

  import floor_img from '/assets/07/m7s/floor_p2_2@3x.png?url'

  const name = 'glower_power_horizontal'

  listenKeys($stratBoards, ['stratboard'], async (stratBoards) => {
    const app = stratBoards.stratboard

    const container = new Container()
    container.position.set(app.screen.width / 2, app.screen.height / 2)
    app.stage.addChild(container)

    const floorTexture = await Assets.load(floor_img)
    const floor = Sprite.from(floorTexture)
    floor.anchor.set(0.5, 0.5)
    floor.scale.set(getScale())
    container.addChild(floor)

    await setWaymark(container, waymarkDataDB, 0.65)

    const aoeSprite = AoE.createRay(14, 60).toSprite(app)
    aoeSprite.position.set(-30 * YmToPx, 0 * YmToPx)
    container.addChild(aoeSprite)

    const roleParams: { type: RoleType; tag: string; x: number; y: number }[] = [
      { type: 'tank', tag: 'MT', x: -17, y: 8 },
      { type: 'tank', tag: 'ST', x: -17, y: -8 },
      { type: 'healer', tag: 'H1', x: -8.25, y: 10 },
      { type: 'healer', tag: 'H2', x: -8.25, y: -10 },
      { type: 'melee', tag: 'D1', x: -23.8, y: 10.8 },
      { type: 'melee', tag: 'D2', x: -23.8, y: -11.2 },
      { type: 'ranged', tag: 'D3', x: 0, y: 10 },
      { type: 'magic', tag: 'D4', x: 0, y: -10 },
    ]
    roleParams.forEach((r) => {
      const role = new Role(r.type, r.tag)
      role.scale.set(0.4)
      role.position.set(r.x * YmToPx, r.y * YmToPx)
      const aoeSprite = AoE.createCircle(6).toSprite(app)
      aoeSprite.position.set(r.x * YmToPx, r.y * YmToPx)
      container.addChild(aoeSprite)
      container.addChild(role)
    })

    const squareMask = new Graphics()
    const width = 50.1 * YmToPx // 46.4
    const height = 25.1 * YmToPx // 25
    squareMask.rect(-width / 2, (-width + height) / 2, width, height)
    squareMask.fill({ color: 'white' })
    container.mask = squareMask
    container.addChild(squareMask)

    // take screenshot
    await new Promise((resolve) => setTimeout(resolve, 1000))
    const url = await app.renderer.extract.base64(app.stage)
    const screenshot = document.createElement('a')
    document.body.append(screenshot)
    screenshot.style.position = 'fixed'
    screenshot.style.top = '20px'
    screenshot.style.right = '20px'
    screenshot.download = name
    screenshot.href = url
    const image = new Image()
    image.width = app.screen.width / 4
    image.src = url
    screenshot.innerHTML = image.outerHTML
  })
</script>
